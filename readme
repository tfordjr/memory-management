CS4760-001SS - Terry Ford Jr. - Project 3 Message Queues - 02/29/2024
https://github.com/tfordjr/message-queues.git

Compile and run instructions:
simply run make command and oss command in the following format:
./oss -n 7 -s 8 -t 2 -i 100
where -n is processes, -s simultaneous processes, -t max runtime, -i launch interval(ms)
use the -h arg to learn more about how to use these commands.
Args default to appropriate figures if not provided, can be in any order.

Features: 
oss.cpp: processes args and handles child forking with fork_and_wait function.
user.cpp: user executable takes one arg for number of iterations. prints and sleeps. 
pcb.h: contains pcb struct and many related functions for process table utility.
clock.h: logical clock struct.
makefile: creates oss and user executables, oss executes user executable to perform work.
readme: explains project

Concerns: 
I followed the guidance to have the user (child) processes print a message everytime they
notice a change on the clock, but for my program, the clock increments every 200 ns, so
I've commented that line(line 52 user.cpp) out as it spams stdout. I did include that req.
Are there cleanup actions I'm missing, or I could improve on my implementation?

Is my nonblocking wait call working correctly? I took out &status and replaced it with
nullptr because it wasn't recognized and I didn't want a junk value there.

Known Problems or Bugs: 
    NOT ABLE TO DETATCH CLOCK! Can't pass to signal functions, and
        I get TONS of bugs when attempting to make logical clock global
    Also not able to delete clock at the end of main(). Not sure how.